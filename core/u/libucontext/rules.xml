<?xml version="1.0" encoding="utf-8"?>
<rules>
    <prepare>
    <![CDATA[

export LDFLAGS="$LDFLAGS -Wl,-z,defs -Wl,--no-as-needed -Wl,-O1"

case $(uname -m) in
    arm*)
        MESON_CPU_FAMILY="arm"
        ;;
    mips64*)
        MESON_CPU_FAMILY="mips64"
        ;;
    mips*)
        MESON_CPU_FAMILY="mips"
        ;;
    powerpc64*|ppc64*)
        MESON_CPU_FAMILY="ppc64"
        ;;
    powerpc*|ppc*)
        MESON_CPU_FAMILY="ppc"
        ;;
    riscv64*)
        MESON_CPU_FAMILY="riscv64"
        ;;
    i*86*)
        MESON_CPU_FAMILY="x86"
        ;;
    *)
        MESON_CPU_FAMILY="$(uname -m)"
        ;;
esac

case $(uname -m) in
    s390x*)
        MESON_ENDIAN="big"
        ;;
    *)
        MESON_ENDIAN="little"
        ;;
esac

cd "$BONDI_BUILD_DIR"

cat << EOF > build.ini
[constants]
arch = '$BONDI_HOST_TYPE'

[binaries]
c = arch + '-gcc'
cpp = arch + '-g++'
strip = arch + '-strip'
ld = arch + '-ld'
ar = arch + '-ar'
objcopy = arch + '-objcopy'
pkgconfig = arch + '-pkg-config'
EOF

cat << EOF > cross.ini
[constants]
arch = '$BONDI_HOST_TYPE'

[host_machine]
system = 'linux'
cpu_family = '$MESON_CPU_FAMILY'
endian = '$MESON_ENDIAN'
cpu = '$(uname -m)'

[binaries]
c = arch + '-gcc'
cpp = arch + '-g++'
strip = arch + '-strip'
ld = arch + '-ld'
ar = arch + '-ar'
objcopy = arch + '-objcopy'
pkgconfig = arch + '-pkg-config'
EOF

if [ "$BONDI_BUILD_FOR" != "tools" ]; then
    EXTRA_OPTS="--cross-file=cross.ini"
fi

meson setup \
    --prefix="$BONDI_INSTALL_PREFIX" \
    --buildtype=debugoptimized \
    --native-file=build.ini \
    --default-library=both \
    $EXTRA_OPTS \
    _build

    ]]>
    </prepare>

    <build>
    <![CDATA[

cd "$BONDI_BUILD_DIR"
ninja -C _build

    ]]>
    </build>

    <install>
    <![CDATA[

cd "$BONDI_BUILD_DIR"
DESTDIR="$BONDI_INSTALL_DIR" ninja -C _build install

    ]]>
    </install>
</rules>
